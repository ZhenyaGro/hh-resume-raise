import { startCountdown } from "@/utils/startCountdown";
import { getResumes } from "../getResumes/getResumes";
import { raiseAllResumes } from "./raiseAllResumes";
import { getValidAccessToken } from "@/authorization";

/**
 * –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö.
 * @param ms –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏.
 * @returns Promise, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è.
 */
const sleep = (ms: number) => new Promise((res) => setTimeout(res, ms));

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∑—é–º–µ.
 * @param token –¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 */
export const setSchedule = async () => {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –¥–µ–π—Å—Ç–≤–∏—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
  const token = await getValidAccessToken();
  if (!token) return;

  await raiseAllResumes(token);

  const resumes = await getResumes(token);
  if (!resumes.length) {
    console.log("‚ùå –†–µ–∑—é–º–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
    return;
  }

  const nextUpdateTime = Math.min(
    ...resumes
      .filter((resume) => !resume.can_publish_or_update)
      .map((resume) => new Date(resume.next_publish_at).getTime())
  );

  /** –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥–Ω—è—Ç–∏—è. –î–æ–±–∞–≤–ª—è–µ—Ç—Å—è 1 –º–∏–Ω—É—Ç–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º —Å —Ç–∞–π–º–∏–Ω–≥–æ–º. */
  const delay = nextUpdateTime - Date.now() + 60 * 1000;

  console.log(
    "üïí –°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—é–º–µ:",
    new Date(nextUpdateTime).toLocaleString()
  );

  startCountdown(nextUpdateTime);
  await sleep(delay);
  setSchedule();
};
